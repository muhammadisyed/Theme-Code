{#
/**
 * @file
 * Theme override for a field.
 *
 * To override output, copy the "field.html.twig" from the templates directory
 * to your theme's directory and customize it, just like customizing other
 * Drupal templates such as page.html.twig or node.html.twig.
 *
 * Instead of overriding the theming for all fields, you can also just override
 * theming for a subset of fields using
 * @link themeable Theme hook suggestions. @endlink For example,
 * here are some theme hook suggestions that can be used for a field_foo field
 * on an article node type:
 * - field--node--field-foo--article.html.twig
 * - field--node--field-foo.html.twig
 * - field--node--article.html.twig
 * - field--field-foo.html.twig
 * - field--text-with-summary.html.twig
 * - field.html.twig
 *
 * Available variables:
 * - attributes: HTML attributes for the containing element.
 * - label_hidden: Whether to show the field label or not.
 * - title_attributes: HTML attributes for the title.
 * - label: The label for the field.
 * - multiple: TRUE if a field can contain multiple items.
 * - items: List of all the field items. Each item contains:
 *   - attributes: List of HTML attributes for each item.
 *   - content: The field item's content.
 * - entity_type: The entity type to which the field belongs.
 * - field_name: The name of the field.
 * - field_type: The type of the field.
 * - label_display: The display settings for the label.
 *
 * @ingroup templates
 *
 * @see template_preprocess_field()
 */
#}
{%
  set classes = [
    'field',
    'field--name-' ~ field_name|clean_class,
    'field--type-' ~ field_type|clean_class,
    'field--label-' ~ label_display,
  ]
%}
{%
  set title_classes = [
    'field--label',
    label_display == 'visually_hidden' ? 'sr-only',
  ]
%}

{% if label_hidden %}
  {% if multiple %}
    <div{{ attributes.addClass(classes, 'field--items') }}>
      <ul class="nav nav-tabs" id="myTab" role="tablist">
      {% for item in items %}
        <li role="presentation" class="{{ loop.index == 1 ? 'active' : '' }}">
          <a href="#cf-tab-{{ loop.index }}" aria-controls="cf-tab-{{ loop.index }}" role="tab" data-toggle="tab">
            {% if item.content['#paragraph'].get('field_image').value %}
              {%
                set tab_image = {
                  '#theme':      'image_style',
                  '#style_name': 'thumbnail',
                  '#uri':        item.content['#paragraph'].field_icon.entity.uri.value,
                  '#attributes': { class: 'img-responsive', loading: 'lazy', alt: item.content['#paragraph'].field_icon.alt },
                }
              %}
              <div class="tab-icon">{{ tab_image }}</div>
            {% endif %}
            {{ item.content['#paragraph'].get('field_title').value }}
          </a>
        </li>
      {% endfor %}
      </ul>
      <div class="tab-content">
        {% for item in items %}
          <div role="tabpanel" class="tab-pane {{ loop.index == 1 ? 'active' : '' }}" id="cf-tab-{{ loop.index }}">
            <div class="inner-wrapper">
              {% if item.content['#paragraph'].get('field_image').value %}
                <div class="image">
                  {%
                    set description_image = {
                      '#theme':      'image',
                      '#uri':        item.content['#paragraph'].field_image.entity.uri.value,
                      '#attributes': { class: 'img-responsive', loading: 'lazy', alt: item.content['#paragraph'].field_image.alt },
                    }
                  %}
                  {{ description_image }}
                </div>
              {% endif %}
              <div class="description">
                {{ item.content['#paragraph'].get('field_tab_description').value|raw }}
              </div>
            </div>
          </div>
        {% endfor %}
      </div>
    </div>
  {% else %}
    {% for item in items %}
      <div{{ attributes.addClass(classes, 'field--item') }}>{{ item.content }}</div>
    {% endfor %}
  {% endif %}
{% else %}
  <div{{ attributes.addClass(classes) }}>
    <div{{ title_attributes.addClass(title_classes) }}>{{ label }}</div>
    {% if multiple %}
      <div class="field--items">
    {% endif %}
    {% for item in items %}
      <div{{ item.attributes.addClass('field--item') }}>{{ item.content }}</div>
    {% endfor %}
    {% if multiple %}
      </div>
    {% endif %}
  </div>
{% endif %}
